name: MRI 2.3, 2.4, 2.5 (EOL)

on:
  push:
    branches:
      - 'main'
    tags:
      - '!*' # Do not execute on tags
  pull_request:
    branches:
      - '*'
  # Allow manually triggering the workflow.
  workflow_dispatch:

# Cancels all previous workflow runs for the same branch that have not yet completed.
concurrency:
  # The concurrency group contains the workflow name and the branch name.
  group: "${{ github.workflow }}-${{ github.ref }}"
  cancel-in-progress: true

jobs:
  test:
    name: Specs ${{ matrix.ruby }} ${{ matrix.appraisal }}${{ matrix.name_extra || '' }}
    if: "!contains(github.event.commits[0].message, '[ci skip]') && !contains(github.event.commits[0].message, '[skip ci]')"
    runs-on: ubuntu-22.04
    continue-on-error: ${{ matrix.experimental || endsWith(matrix.ruby, 'head') }}
    env: # $BUNDLE_GEMFILE must be set at job level, so it is set for all steps
      BUNDLE_GEMFILE: ${{ github.workspace }}/${{ matrix.gemfile }}.gemfile
    strategy:
      fail-fast: false
      matrix:
        include:
# Can't run in CI because something is loading a gem version of cgi that fails with Ruby 2.3 and 2.4.
# There doesn't appear to be a simple workaround.
#   /opt/hostedtoolcache/Ruby/2.4.10/x64/lib/ruby/gems/2.4.0/gems/cgi-0.1.1/lib/cgi/core.rb:424:in `block in <module:QueryExtension>': undefined method `delete_prefix' for "CONTENT_LENGTH":String (NoMethodError)
#	from /opt/hostedtoolcache/Ruby/2.4.10/x64/lib/ruby/gems/2.4.0/gems/cgi-0.1.1/lib/cgi/core.rb:423:in `each'
#	from /opt/hostedtoolcache/Ruby/2.4.10/x64/lib/ruby/gems/2.4.0/gems/cgi-0.1.1/lib/cgi/core.rb:423:in `<module:QueryExtension>'
#	from /opt/hostedtoolcache/Ruby/2.4.10/x64/lib/ruby/gems/2.4.0/gems/cgi-0.1.1/lib/cgi/core.rb:421:in `<class:CGI>'
#	from /opt/hostedtoolcache/Ruby/2.4.10/x64/lib/ruby/gems/2.4.0/gems/cgi-0.1.1/lib/cgi/core.rb:6:in `<top (required)>'
#	from /opt/hostedtoolcache/Ruby/2.4.10/x64/lib/ruby/gems/2.4.0/gems/cgi-0.1.1/lib/cgi.rb:293:in `require'
#	from /opt/hostedtoolcache/Ruby/2.4.10/x64/lib/ruby/gems/2.4.0/gems/cgi-0.1.1/lib/cgi.rb:293:in `<top (required)>'
#	from /opt/hostedtoolcache/Ruby/2.4.10/x64/lib/ruby/gems/2.4.0/gems/mocha-2.7.1/lib/mocha/parameter_matchers/equivalent_uri.rb:3:in `require'
#          # Ruby 2.3
#          - ruby: "ruby-2.3"
#            appraisal: "ruby-2-3"
#            exec_cmd: "rake test"
#            gemfile: "Appraisal.root"
#            rubygems: "3.3.27"
#            bundler: "2.3.27"
#
#          # Ruby 2.4
#          - ruby: "ruby-2.4"
#            appraisal: "ruby-2-4"
#            exec_cmd: "rake test"
#            gemfile: "Appraisal.root"
#            rubygems: "3.3.27"
#            bundler: "2.3.27"

          # Ruby 2.5
          - ruby: "ruby-2.5"
            appraisal: "ruby-2-5"
            exec_cmd: "rake test"
            gemfile: "Appraisal.root"
            rubygems: "3.3.27"
            bundler: "2.3.27"

    steps:
      - name: Checkout
        uses: actions/checkout@v5

      - name: Setup Ruby & RubyGems
        uses: ruby/setup-ruby@v1
        with:
          ruby-version: ${{ matrix.ruby }}
          rubygems: ${{ matrix.rubygems }}
          bundler: ${{ matrix.bundler }}
          bundler-cache: false

      # Raw `bundle` will use the BUNDLE_GEMFILE set to matrix.gemfile (i.e. Appraisal.root)
      # We need to do this first to get appraisal installed.
      # NOTE: This does not use the primary Gemfile at all.
      - name: Install Root Appraisal
        run: bundle
      - name: Appraisal for ${{ matrix.appraisal }}
        run: bundle exec appraisal ${{ matrix.appraisal }} bundle
      - name: Tests for ${{ matrix.ruby }} via ${{ matrix.exec_cmd }}
        run: bundle exec appraisal ${{ matrix.appraisal }} bundle exec ${{ matrix.exec_cmd }}
